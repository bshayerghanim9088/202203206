from enum import Enum
from datetime import datetime

"""Reservation System Classes"""

# RoomType Enum for room types
class RoomType(Enum):
    Queen = 1
    King = 2
    Suite = 3

# Guest class represents the hotel guest
class Guest:
    def __init__(self, guestID=0, name="", contactDetails="", email="", address="", phone="", reservation=None):
        self.guestID = guestID  # Unique identifier for the guest
        self.name = name  # Guest's name
        self.contactDetails = contactDetails  # Guest's contact information
        self.email = email  # Guest's email address
        self.address = address  # Guest's address
        self.phone = phone  # Guest's phone number
        self.reservation = reservation  # Reservation associated with the guest

    # Getters for guestID, name, email, contact details, address, and phone
    def getGuestID(self):
        return self.guestID

    def getName(self):
        return self.name

    def getEmail(self):
        return self.email

    def getAddress(self):
        return self.address

    def getPhone(self):
        return self.phone

# Reservation class manages the reservation process
class Reservation:
    def __init__(self, reservationID=0, room=None, checkInDate=None, checkOutDate=None, status="", advance_payment=None):
        self.reservationID = reservationID  # Unique identifier for the reservation
        self.room = room  # Room object associated with the reservation
        self.checkInDate = checkInDate  # Check-in date
        self.checkOutDate = checkOutDate  # Check-out date
        self.status = status  # Reservation status (e.g., Confirmed, Canceled)
        self.advance_payment = advance_payment  # Payment object linked to the reservation

    # Getters for reservationID, check-in, and check-out dates
    def getReservationID(self):
        return self.reservationID

    def getCheckInDate(self):
        return self.checkInDate

    def getCheckOutDate(self):
        return self.checkOutDate

# Room class to represent the hotel room
class Room:
    def __init__(self, roomNumber=0, roomType=RoomType.Queen, pricePerNight=0.0):
        self.roomNumber = roomNumber  # Room number
        self.roomType = roomType  # Type of room
        self.pricePerNight = pricePerNight  # Price per night

    # Getters for room type and price per night
    def getRoomNumber(self):
        return self.roomNumber

    def getRoomType(self):
        return self.roomType

    def getPricePerNight(self):
        return self.pricePerNight

# Payment class handles the payment processing
class Payment:
    def __init__(self, paymentID=0, amount=0.0, cardNumber="", paymentMethod="", paymentNote=""):
        self.paymentID = paymentID  # Unique payment ID
        self.amount = amount  # Payment amount
        self.cardNumber = cardNumber  # Card number used for payment
        self.paymentMethod = paymentMethod  # Payment method (e.g., "MasterCard")
        self.paymentNote = paymentNote  # Payment note (e.g., "Ending in 9804")

    # Getters for masked card number and payment details
    def getMaskedCardNumber(self):
        return f"**** **** **** {self.cardNumber[-4:]}"

# Generate Invoice
def generate_invoice(guest):
    """Generate an invoice for the reservation."""
    reservation = guest.reservation
    print("Your Reservation Is Confirmed")
    print("Thank you for your reservation. Please print your hotel receipt and show it at checkin\n")

    print(f"Your Name: {guest.getName()}")
    print(f"Your Email: {guest.getEmail()}")
    print(f"Priceline Trip Number: {reservation.advance_payment.paymentID}")
    print(f"Hotel Confirmation Number: {reservation.getReservationID()}\n")

    print("Comfort Inn & Suites Los Alamos")
    print(f"Address: {guest.getAddress()}")
    print(f"Phone: {guest.getPhone()}")
    print(f"Room Number: {reservation.room.getRoomNumber()}: {guest.getName()}")
    print(f"Check-In: {reservation.getCheckInDate()}")
    print(f"Check-Out: {reservation.getCheckOutDate()}")
    num_nights = (reservation.getCheckOutDate() - reservation.getCheckInDate()).days
    print(f"Number of Nights: {num_nights}")
    print(f"Number of Rooms: 1")
    print(f"Room Type: {reservation.room.getRoomType().name}")

    print("\nSummary of Charges")
    print(f"Billing Name: {guest.getName()}")
    print(f"{reservation.advance_payment.paymentMethod}: {reservation.advance_payment.paymentNote}")
    print(f"Room Cost per night: ${reservation.room.getPricePerNight():.2f}")
    print(f"Rooms: 1")
    print(f"Nights: {num_nights}")
    room_subtotal = reservation.room.getPricePerNight() * num_nights
    print(f"Room Subtotal: ${room_subtotal:.2f}")
    taxes_and_fees = 21.58  # Example value for taxes and fees
    print(f"Taxes and Fees: ${taxes_and_fees:.2f}")
    total_amount = room_subtotal + taxes_and_fees
    print(f"Total Charges: ${total_amount:.2f}")

# Sample Data to Create Objects and Generate Invoice

# Create Room object
room1 = Room(roomNumber=101, roomType=RoomType.Queen, pricePerNight=89.85)

# Create Payment object
payment1 = Payment(paymentID=52573887, amount=201.48, cardNumber="1234567890129804", paymentMethod="MasterCard", paymentNote="Ending in 9804")

# Create Reservation object
check_in_date = datetime(2024, 10, 10)
check_out_date = datetime(2024, 10, 15)
reservation1 = Reservation(reservationID=123456, room=room1, checkInDate=check_in_date, checkOutDate=check_out_date, status="Confirmed", advance_payment=payment1)

# Create Guest object
guest1 = Guest(guestID=1001, name="Ali Al-Hashmi", contactDetails="0567891234", email="ali.alhashmi@example.com", address="Abu Dhabi", phone="0567891234", reservation=reservation1)

# Generate and display the invoice
generate_invoice(guest1)

